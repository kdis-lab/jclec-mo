package net.sf.jclec.realarray;

import java.util.Comparator;

import net.sf.jclec.IFitness;
import net.sf.jclec.IIndividual;

import net.sf.jclec.base.AbstractEvaluator;
import net.sf.jclec.fitness.SimpleValueFitness;
import net.sf.jclec.fitness.ValueFitnessComparator;


/**
 * Evaluator used in unit tests.
 * 
 * @author Sebastian Ventura
 */

public class SphereEvaluator extends AbstractEvaluator 
{
	/////////////////////////////////////////////////////////////////
	// --------------------------------------- Serialization constant
	/////////////////////////////////////////////////////////////////

	/** Generated by Eclipse */
	
	private static final long serialVersionUID = -5113229917484135075L;
	
	/////////////////////////////////////////////////////////////////
	// ---------------------------------------------- Class variables
	/////////////////////////////////////////////////////////////////

	/** Individuals comparator */
	
	private static final Comparator<IFitness> COMPARATOR = new ValueFitnessComparator(true);
	
	/////////////////////////////////////////////////////////////////
	// ------------------------------------------------- Constructors
	/////////////////////////////////////////////////////////////////
	
	public SphereEvaluator() 
	{
		super();
	}

	/////////////////////////////////////////////////////////////////
	// ---------------------------- Implementing IEvaluator interface
	/////////////////////////////////////////////////////////////////

	public void evaluate(IIndividual ind) 
	{
			double [] genotype = ( (RealArrayIndividual) ind).getGenotype();
			double fvalue = 0.0;
			for (double gi : genotype) fvalue += gi*gi;
			ind.setFitness(new SimpleValueFitness(fvalue));
	}

	public Comparator<IFitness> getComparator() 
	{
		return COMPARATOR;
	}
}
