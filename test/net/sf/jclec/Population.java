package net.sf.jclec;

import java.util.List;

import net.sf.jclec.util.random.IRandGen;
import net.sf.jclec.util.random.IRandGenFactory;

/**
 * IPopulation implementation. Used as execution context in tool tests.
 * 
 * @author Sebastian Ventura
 */

public class Population implements IPopulation 
{
	/////////////////////////////////////////////////////////////////
	// -------------------------------------- Serialization constants
	/////////////////////////////////////////////////////////////////

	/** Generated by Eclipse */
	
	private static final long serialVersionUID = -1506522863002626807L;

	/////////////////////////////////////////////////////////////////
	// ------------------------------------------------- System state
	/////////////////////////////////////////////////////////////////

	/** Random generators factory */

	protected IRandGenFactory randGenFactory;
	
	/** Individuals species */
	
	protected ISpecies species;
	
	/** Individuals evaluator */

	protected IEvaluator evaluator;
	
	/** Actual generation */
	
	protected int generation;
	
	/** System individuals */
	
	protected List<IIndividual> inhabitants;
	
	/////////////////////////////////////////////////////////////////
	// ------------------------------------------------- System state
	/////////////////////////////////////////////////////////////////

	public Population() 
	{
		super();
	}

	/////////////////////////////////////////////////////////////////
	// ----------------------------------------------- Public methods
	/////////////////////////////////////////////////////////////////
	
	// Setting and getting properties
	
	public final IRandGenFactory getRandGenFactory() 
	{
		return randGenFactory;
	}

	public final void setRandGenFactory(IRandGenFactory randGenFactory) 
	{
		this.randGenFactory = randGenFactory;
	}

	public final void setSpecies(ISpecies species) 
	{
		this.species = species;
	}
	
	public final void setEvaluator(IEvaluator evaluator) 
	{
		this.evaluator = evaluator;
	}

	public final void setGeneration(int generation) 
	{
		this.generation = generation;
	}

	public final void setInhabitants(List<IIndividual> inhabitants) 
	{
		this.inhabitants = inhabitants;
	}

	// IPopulation interface

	public ISpecies getSpecies() 
	{
		return species;
	}

	public IEvaluator getEvaluator() 
	{
		return evaluator;
	}

	public int getGeneration() 
	{
		return generation;
	}

	public List<IIndividual> getInhabitants() 
	{
		return inhabitants;
	}

	public IRandGen createRandGen() 
	{
		return randGenFactory.createRandGen();
	}
}
